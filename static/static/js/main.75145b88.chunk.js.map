{"version":3,"sources":["theme.js","Listbox.js","env.js","PvgGallery.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","LISTBOX_PADDING","renderRow","props","data","index","style","React","cloneElement","top","OuterElementContext","createContext","OuterElementType","forwardRef","ref","outerProps","useContext","ListboxComponent","children","other","itemData","Children","toArray","smUp","useMediaQuery","breakpoints","up","noSsr","itemCount","length","itemSize","getChildSize","child","isValidElement","type","ListSubheader","Provider","value","height","map","reduce","a","b","width","key","outerElementType","innerElementType","overscanCount","host","window","location","protocol","hostname","port","IMAGES_PER_PAGE","useStyles","makeStyles","mr","marginRight","md","marginDown","ImageCaption","classes","img","illust_url","pid","toString","author_url","aid","Typography","className","Link","href","title","author","tags","tag","Chip","label","onClick","update_tags","nav","GalleryView","useState","set_index","photos","images","e","onClose","currentIndex","views","GalleryPagination","state","offset","default_offset","set_offset","off","setState","this","pages","tot","modal_pages","Grid","container","justify","limit","total","otherPageColor","Component","PvgGallery","page","modal_page","locating_id","src","push","w","h","source","caption","Date","now","App","set_tags","console","log","tags_curr","update","add_tag","id","includes","concat","error","loaded","tags_list","fetch","crossDomain","method","body","JSON","stringify","filters","headers","Headers","then","res","json","s","Map","items","c","get","set","Array","from","Symbol","iterator","sort","fallback","compare_fallback","compare","ThemeProvider","CssBaseline","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","box","Autocomplete","multiple","freeSolo","options","renderTags","getTagProps","option","variant","renderInput","params","TextField","fullWidth","onChange","renderOption","noWrap","Container","card","maxWidth","withStyles","spacing","paddingTop","paddingBottom","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75145b88.chunk.js","sourcesContent":["\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#eeeeee',\n        },\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { VariableSizeList } from 'react-window';\nimport theme from './theme.js';\n\nconst LISTBOX_PADDING = 8; // px\n\nfunction renderRow(props) {\n    const { data, index, style } = props;\n    return React.cloneElement(data[index], {\n        style: {\n            ...style,\n            top: style.top + LISTBOX_PADDING,\n        },\n    });\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n    const outerProps = React.useContext(OuterElementContext);\n    return <div ref={ref} {...props} {...outerProps} />;\n});\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n    const { children, ...other } = props;\n    const itemData = React.Children.toArray(children);\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'), { noSsr: true });\n    const itemCount = itemData.length;\n    const itemSize = smUp ? 36 : 48;\n    \n    const getChildSize = child => {\n        if (React.isValidElement(child) && child.type === ListSubheader) {\n            return 48;\n        }\n        \n        return itemSize;\n    };\n    \n    const getHeight = () => {\n        if (itemCount > 8) {\n            return 8 * itemSize;\n        }\n        return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n    };\n    \n    return (\n        <div ref={ref}>\n            <OuterElementContext.Provider value={other}>\n                <VariableSizeList\n                    itemData={itemData}\n                    height={getHeight() + 2 * LISTBOX_PADDING}\n                    width=\"100%\"\n                    key={itemCount}\n                    outerElementType={OuterElementType}\n                    innerElementType=\"ul\"\n                    itemSize={index => getChildSize(itemData[index])}\n                    overscanCount={5}\n                    itemCount={itemCount}\n                >\n                    {renderRow}\n                </VariableSizeList>\n            </OuterElementContext.Provider>\n        </div>\n        );\n    });\n    \n    ListboxComponent.propTypes = {\n        children: PropTypes.node,\n    };\n\nexport default ListboxComponent;\n","// const host = 'http://127.0.0.1:5000/';\nconst host = window.location.protocol + '//' +\n    window.location.hostname +\n    (window.location.port ? ':' + window.location.port + '/' : '/');\n\nconst IMAGES_PER_PAGE = 50;\n\nexport { host, IMAGES_PER_PAGE };\n","import React, { useState, Component } from 'react';\n\nimport { Link, Chip, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Pagination from \"material-ui-flat-pagination\";\nimport Carousel, { Modal, ModalGateway } from 'react-images';\nimport Gallery from 'react-photo-gallery';\n\nimport { host, IMAGES_PER_PAGE } from './env.js';\n\nconst useStyles = makeStyles({\n    mr: {\n        marginRight: '0.5em'\n    },\n    md: {\n        marginDown: '1em'\n    }\n});\n\nfunction ImageCaption(props) {\n    const classes = useStyles();\n\n    const img = props.img;\n    const illust_url = 'https://www.pixiv.net/artworks/' + img.pid.toString(),\n          author_url = 'https://www.pixiv.net/member.php?id=' + img.aid.toString();\n\n    return (\n        <Typography>\n            <div className={classes.md}>\n                <Link href={illust_url} className={classes.mr}>{img.title}</Link>\n                <Link href={author_url}>{img.author}</Link>\n            </div>\n            {img.tags.map(tag =>\n                <Chip\n                    className={classes.mr}\n                    label={tag}\n                    onClick={ () => {\n                        props.update_tags(tag, img.nav);\n                    }}\n                />\n            )}\n        </Typography>\n    );\n}\n\nfunction GalleryView(props) {\n    const [index, set_index] = useState(-1);\n\n    return (\n        <>\n            <Gallery photos={props.images} onClick={ (e, {index}) => set_index(index) } />\n            <ModalGateway>\n                {index >= 0 ? (\n                <Modal onClose={ () => set_index(-1) }>\n                    <Carousel\n                        currentIndex={index}\n                        views={props.views}\n                    />\n                </Modal>\n                ) : null}\n            </ModalGateway>\n        </>\n    );\n}\n\nclass GalleryPagination extends Component {\n    state = {\n        offset: this.props.default_offset,\n    };\n\n    set_offset = off => {\n        this.setState({\n            offset: off\n        });\n    };\n\n    render() {\n        const off = this.state.offset, pages = this.props.pages, tot = pages.length;\n\n        let images, views;\n        if (off < tot) {\n            images = pages[off];\n            views = this.props.modal_pages[off];\n        } else\n            images = views = [];\n\n        return (\n            <>\n                <Grid container justify=\"center\">\n                    <Pagination\n                        limit={1}\n                        offset={off}\n                        total={tot}\n                        onClick={(e, offset) => this.set_offset(offset)}\n                        otherPageColor=\"default\"\n                    />\n                </Grid>\n                <GalleryView\n                    images={images}\n                    views={views}\n                />\n            </>\n        );\n    }\n}\n\n\nexport default function PvgGallery(props) {\n    let pages = [], modal_pages = [], page = [], modal_page = [], offset = 0;\n\n    for (const img of props.images) {\n        if (img.nav === props.locating_id)\n            offset = pages.length;\n\n        const src = host + 'img/' + img.nav;\n        page.push({\n            src,\n            width: img.w,\n            height: img.h\n        });\n        modal_page.push({\n            source: src,\n            caption: <ImageCaption img={img} update_tags={props.update_tags} />\n        });\n\n        if (page.length >= IMAGES_PER_PAGE) {\n            pages.push(page);\n            modal_pages.push(modal_page);\n            page = [];\n            modal_page = [];\n        }\n    }\n    if (page.length) {\n        pages.push(page);\n        modal_pages.push(modal_page);\n    }\n\n    return (\n        <GalleryPagination\n            pages={pages}\n            modal_pages={modal_pages}\n            default_offset={offset}\n            key={Date.now()} // anti-pattern?\n        />\n    );\n}\n","import React, { Component } from 'react';\n\nimport 'typeface-roboto';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles, ThemeProvider } from '@material-ui/core/styles';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport ListboxComponent from './Listbox.js'\nimport PvgGallery from './PvgGallery.js'\nimport { host } from './env.js';\nimport theme from './theme.js';\n\nconst styles = theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    card: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    box: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(3),\n        },\n    }\n});\n\nfunction compare(a, b) {\n    if (a < b)\n        return -1;\n    if (a > b)\n        return 1;\n    return 0;\n}\n\nfunction compare_fallback(a, b, fallback) {\n    if (a < b)\n        return -1;\n    if (a > b)\n        return 1;\n    return fallback();\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            loaded: false,\n            images: [],\n            tags_list: [],\n            tags_curr: [],\n            locating_id: -1\n        };\n    }\n\n    update() {\n        console.log('update with', this.state.tags_curr);\n        fetch(host + 'select', {\n            crossDomain: true,\n            method: 'POST',\n            body: JSON.stringify({\n                filters: this.state.tags_curr\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        .then(res => res.json())\n        .then(\n            res => {\n                let s = new Map();\n                for (const img of res.items)\n                    for (const tag of img.tags) {\n                        const c = s.get(tag);\n                        s.set(tag, c ? c + 1 : 1);\n                    }\n                s = Array.from(s[Symbol.iterator]());\n                s.sort((a, b) => compare_fallback(b[1], a[1], () => compare(a[0], b[0])));\n\n                this.setState({\n                    loaded: true,\n                    error: null,\n                    images: res.items,\n                    tags_list: s.map(a => a[0])\n                });\n            },\n            error => {\n                this.setState({\n                    loaded: true,\n                    error: error,\n                    images: [],\n                    tags_list: []\n                });\n            }\n        );\n    }\n    set_tags = tags => {\n        console.log('sets', tags);\n        this.setState({\n            tags_curr: tags,\n            locating_id: -1\n        }, this.update);\n    };\n\n    add_tag = (tag, id) => {\n        console.log('add', tag);\n        if (!this.state.tags_curr.includes(tag))\n            this.setState(state => {\n                return {\n                    tags_curr: state.tags_curr.concat([tag]),\n                    locating_id: id\n                };\n            }, this.update);\n    };\n\n    /*\n    resize() {\n        this.setState({});\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.resize);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize);\n    }\n    */\n\n    componentDidMount() {\n        this.update();\n    }\n\n    render() {\n        console.log('QAQ', this.state.tags_curr);\n        const { classes } = this.props;\n\n        return (\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <div className={classes.box}>\n                            <Autocomplete\n                                multiple\n                                freeSolo\n                                options={this.state.tags_list}\n                                ListboxComponent={ListboxComponent}\n                                renderTags={(value, getTagProps) =>\n                                    value.map((option, index) => (\n                                        <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                                    ))\n                                }\n                                renderInput={params => (\n                                    <TextField {...params} fullWidth />\n                                )}\n                                onChange={ (e, value) => this.set_tags(value) }\n                                renderOption={option => <Typography noWrap>{option}</Typography>}\n                                value={this.state.tags_curr}\n                            />\n                        </div>\n                    </Toolbar>\n                </AppBar>\n\n\n                <Container className={classes.card} maxWidth=\"lg\">\n                    {this.state.loaded ?\n                        (this.state.error ?\n                            <div>\n                                Error\n                            </div> :\n                            <PvgGallery\n                                images={this.state.images}\n                                locating_id={this.state.locating_id}\n                                update_tags={this.add_tag}\n                            />\n                        ) :\n                        <div>\n                            Loading..\n                        </div>\n                    }\n                </Container>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}